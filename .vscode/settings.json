{
	"npm.packageManager": "bun",
	"biome.enabled": true,
	"editor.codeActionsOnSave": [
		"source.removeUnusedImports",
		"source.addMissingImports.ts",
		"source.biome",
		"source.organizeImports.biome",
		"fixAll"
	],
	"editor.formatOnSave": true,
	"editor.formatOnPaste": false,
	"editor.tabSize": 2,
	"editor.insertSpaces": false,
	"editor.quickSuggestions": {
		"other": "on",
		"comments": "off",
		"strings": "on"
	},
	"tailwindCSS.validate": true,
	"tailwindCSS.classFunctions": ["cva", "cn", "twMerge"],
	// https://github.com/paolotiu/tailwind-intellisense-regex-list
	"tailwindCSS.experimental.classRegex": [
		"(?:const|let|var)\\s+[\\w$_][_\\w\\d]*\\s*=\\s*['\\\"](.*?)['\\\"]",
		// vars
		[
			"(?:\\b(?:const|let|var)\\s+)?[\\w$_]*(?:[Ss]tyles|[Cc]lasses|[Cc]lassnames)[\\w\\d]*\\s*(?:=|\\+=)\\s*['\"]([^'\"]*)['\"]"
		],
		// helper function calls
		["(cva|clsx|cn|twMerge)\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
		// classNames object
		["classNames:\\s*{([\\s\\S]*?)}", "\\s?[\\w].*:\\s*?[\"'`]([^\"'`]*).*?,?\\s?"],
		// comments (e.g. `/* @tw */ 'className'`)
		"@tw\\s\\*\/\\s+[\"'`]([^\"'`]*)"
	],
	"typescript.preferences.importModuleSpecifierEnding": "minimal",
	"typescript.preferences.includePackageJsonAutoImports": "on",
	"typescript.enablePromptUseWorkspaceTsdk": true,
	"typescript.preferences.preferTypeOnlyAutoImports": true,
	"typescript.preferences.autoImportSpecifierExcludeRegexes": [
		"@radix-ui",
		"^assert",
		"^console",
		"^node:console",
		"^node:process",
		"^node:inspector",
		"^node:stream/consumers",
		"^node:test",
		"^node:vm",
		"^process",
		"^stream",
		"^stream/consumers",
		"^inspector",
		"^vm",
		"^net",
		"^tls"
	],
	"files.watcherExclude": {
		"**/.git/objects/**": true,
		"**/.git/subtree-cache/**": true,
		"**/.hg/store/**": true,
		"**/src-tauri/target/**": true
	},
	"files.associations": {
		"*.css": "tailwindcss",
		"*.sql": "sql"
	},
	"files.exclude": {
		"**/src-tauri/target": true
	},
	"explorer.fileNesting.enabled": true,
	"explorer.fileNesting.patterns": {
		"*.ts": "${capture}.js",
		"*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
		"*.jsx": "${capture}.js",
		"*.tsx": "${capture}.ts, ${capture}.*.tsx",
		"tsconfig.json": "tsconfig.*.json",
		"package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml, bun.lockb",
		"Cargo.toml": "Cargo.lock"
	},
	"[javascript]": {
		"editor.defaultFormatter": "biomejs.biome"
	},
	"[javascriptreact]": {
		"editor.defaultFormatter": "biomejs.biome"
	},
	"[json]": {
		"editor.defaultFormatter": "biomejs.biome"
	},
	"[jsonc]": {
		"editor.defaultFormatter": "biomejs.biome"
	},
	"[typescript]": {
		"editor.defaultFormatter": "biomejs.biome"
	},
	"[typescriptreact]": {
		"editor.defaultFormatter": "biomejs.biome"
	},
	"[html]": {
		"editor.defaultFormatter": "biomejs.biome"
	},
	"[css]": {
		"editor.defaultFormatter": "biomejs.biome"
	},
	"[scss]": {
		"editor.defaultFormatter": "biomejs.biome"
	},
	"[tailwindcss]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"[rust]": {
		"editor.defaultFormatter": "rust-lang.rust-analyzer",
		"editor.inlayHints.enabled": "offUnlessPressed"
	},
	"rust-analyzer.imports.granularity.group": "module",
	"rust-analyzer.imports.prefix": "self",
	"rust-analyzer.check.allTargets": false,
	"rust-analyzer.diagnostics.disabled": ["unresolved-proc-macro", "inactive-code"],
	"rust-analyzer.cargo.sysroot": "discover",
	"rust-analyzer.restartServerOnConfigChange": true,
	"rust-analyzer.linkedProjects": ["src-tauri/Cargo.toml"],
	"rust-analyzer.server.extraEnv": {
		"CARGO_TARGET_DIR": "${workspaceFolder}/src-tauri/target/analyzer"
	},
	"rust-analyzer.cargo.targetDir": "${workspaceFolder}/src-tauri/target/analyzer",
	"errorLens.delay": 500,
	"typescript.tsdk": "node_modules/typescript/lib",
	"tailwindCSS.rootFontSize": 14
}
